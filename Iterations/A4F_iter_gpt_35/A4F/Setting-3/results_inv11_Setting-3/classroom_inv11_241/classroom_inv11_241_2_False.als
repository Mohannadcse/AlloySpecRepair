sig Person { Tutors: set Person, Teaches: set Class } sig Group {} sig Class { Groups: Person -> Group } sig Teacher extends Person {} sig Student extends Person {} pred inv11 { all c: Class, p: Person, g: Group | (c->p->g in Groups) implies some t: Teacher | t->c in Teaches } assert inv11_Repaired { inv11[] iff inv11_OK[] } pred repair_pred_1 { all c: Class, p: Person, g: Group | (c->p->g in Groups) implies some t: Teacher | t->c in Teaches }