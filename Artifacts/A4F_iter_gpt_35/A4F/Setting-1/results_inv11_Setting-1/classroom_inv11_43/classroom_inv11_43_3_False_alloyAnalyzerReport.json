{
  "counterexamples": [
    {
      "cntr_cmd": "Check inv1_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv1_Repaired assertion is invalid\nthis/Teacher={Teacher$0}\nthis/Student={Student$0, Student$1}\nthis/Person={Student$0, Student$1, Teacher$0}\nthis/Person.Tutors={Student$0->Student$1, Student$1->Student$1, Student$1->Teacher$0, Teacher$0->Student$0}\nthis/Person.Teaches={Student$0->Class$1, Student$0->Class$2, Student$1->Class$0, Teacher$0->Class$1, Teacher$0->Class$2}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1, Class$2}\nthis/Class.Groups={Class$0->Student$1->Group$0, Class$0->Student$1->Group$1, Class$0->Student$1->Group$2, Class$1->Student$1->Group$0, Class$1->Student$1->Group$1, Class$1->Student$1->Group$2, Class$2->Student$0->Group$2, Class$2->Student$1->Group$0, Class$2->Student$1->Group$1}\n"
    },
    {
      "cntr_cmd": "Check inv2_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv2_Repaired assertion is invalid\nthis/Teacher={Teacher$0}\nthis/Student={Student$0, Student$1}\nthis/Person={Student$0, Student$1, Teacher$0}\nthis/Person.Tutors={Student$0->Student$1, Student$1->Student$1, Student$1->Teacher$0, Teacher$0->Student$0}\nthis/Person.Teaches={Student$0->Class$1, Student$0->Class$2, Student$1->Class$0, Teacher$0->Class$1, Teacher$0->Class$2}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1, Class$2}\nthis/Class.Groups={Class$0->Student$1->Group$0, Class$0->Student$1->Group$1, Class$0->Student$1->Group$2, Class$1->Student$1->Group$0, Class$1->Student$1->Group$1, Class$1->Student$1->Group$2, Class$2->Student$0->Group$2, Class$2->Student$1->Group$0, Class$2->Student$1->Group$1}\n"
    },
    {
      "cntr_cmd": "Check inv3_Repaired",
      "counterexample": "no",
      "counterexample_msg": "Counterexample not found which means that Check inv3_Repaired is valid"
    },
    {
      "cntr_cmd": "Check inv4_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv4_Repaired assertion is invalid\nthis/Teacher={Teacher$0}\nthis/Student={Student$0}\nthis/Person={Person$0, Teacher$0, Student$0}\nthis/Person.Tutors={Person$0->Teacher$0, Teacher$0->Teacher$0, Teacher$0->Student$0, Student$0->Person$0}\nthis/Person.Teaches={Person$0->Class$1, Teacher$0->Class$0, Student$0->Class$0}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1}\nthis/Class.Groups={Class$0->Person$0->Group$2, Class$0->Teacher$0->Group$0, Class$0->Teacher$0->Group$1, Class$0->Student$0->Group$2, Class$1->Teacher$0->Group$0, Class$1->Teacher$0->Group$1}\n"
    },
    {
      "cntr_cmd": "Check inv5_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv5_Repaired assertion is invalid\nthis/Teacher={}\nthis/Student={Student$0, Student$1}\nthis/Person={Student$0, Student$1, Person$0}\nthis/Person.Tutors={Student$0->Student$1, Student$1->Student$1, Student$1->Person$0, Person$0->Student$0}\nthis/Person.Teaches={Student$0->Class$0, Student$0->Class$1, Student$0->Class$2, Student$1->Class$0, Student$1->Class$1, Student$1->Class$2, Person$0->Class$0, Person$0->Class$1, Person$0->Class$2}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1, Class$2}\nthis/Class.Groups={Class$0->Student$1->Group$0, Class$0->Student$1->Group$1, Class$0->Student$1->Group$2, Class$1->Student$1->Group$0, Class$1->Student$1->Group$1, Class$1->Student$1->Group$2, Class$2->Student$0->Group$0, Class$2->Student$0->Group$1, Class$2->Student$0->Group$2, Class$2->Person$0->Group$0, Class$2->Person$0->Group$1, Class$2->Person$0->Group$2}\n"
    },
    {
      "cntr_cmd": "Check inv6_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv6_Repaired assertion is invalid\nthis/Teacher={Teacher$0}\nthis/Student={Student$0, Student$1}\nthis/Person={Student$0, Student$1, Teacher$0}\nthis/Person.Tutors={Student$0->Student$1, Student$1->Student$0, Student$1->Teacher$0, Teacher$0->Teacher$0}\nthis/Person.Teaches={Student$0->Class$0, Student$0->Class$1, Student$0->Class$2, Student$1->Class$0, Student$1->Class$1, Student$1->Class$2}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1, Class$2}\nthis/Class.Groups={Class$0->Student$1->Group$0, Class$0->Student$1->Group$1, Class$0->Student$1->Group$2, Class$1->Student$1->Group$0, Class$1->Student$1->Group$1, Class$1->Student$1->Group$2, Class$2->Student$0->Group$2, Class$2->Student$1->Group$0, Class$2->Student$1->Group$1}\n"
    },
    {
      "cntr_cmd": "Check inv7_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv7_Repaired assertion is invalid\nthis/Teacher={Teacher$0}\nthis/Student={Student$0, Student$1}\nthis/Person={Student$0, Student$1, Teacher$0}\nthis/Person.Tutors={Student$0->Student$1, Student$1->Teacher$0, Teacher$0->Student$0, Teacher$0->Teacher$0}\nthis/Person.Teaches={Student$0->Class$1, Student$0->Class$2, Student$1->Class$0, Teacher$0->Class$1, Teacher$0->Class$2}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1, Class$2}\nthis/Class.Groups={Class$0->Student$0->Group$1, Class$0->Student$0->Group$2, Class$0->Student$1->Group$0, Class$0->Teacher$0->Group$1, Class$0->Teacher$0->Group$2, Class$1->Student$0->Group$0, Class$1->Student$0->Group$2, Class$1->Student$1->Group$1, Class$1->Teacher$0->Group$0, Class$1->Teacher$0->Group$2, Class$2->Student$0->Group$0, Class$2->Student$0->Group$2, Class$2->Student$1->Group$1, Class$2->Student$1->Group$2, Class$2->Teacher$0->Group$0}\n"
    },
    {
      "cntr_cmd": "Check inv8_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv8_Repaired assertion is invalid\nthis/Teacher={Teacher$0}\nthis/Student={Student$0, Student$1}\nthis/Person={Student$0, Student$1, Teacher$0}\nthis/Person.Tutors={Student$0->Student$0, Student$0->Student$1, Student$1->Teacher$0, Teacher$0->Student$0, Teacher$0->Teacher$0}\nthis/Person.Teaches={Student$0->Class$2, Student$1->Class$1, Teacher$0->Class$0, Teacher$0->Class$2}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1, Class$2}\nthis/Class.Groups={Class$0->Student$0->Group$2, Class$0->Student$1->Group$1, Class$0->Teacher$0->Group$0, Class$0->Teacher$0->Group$2, Class$1->Student$0->Group$0, Class$1->Student$0->Group$2, Class$1->Student$1->Group$0, Class$1->Student$1->Group$1, Class$1->Student$1->Group$2, Class$2->Student$1->Group$0, Class$2->Student$1->Group$2, Class$2->Teacher$0->Group$1}\n"
    },
    {
      "cntr_cmd": "Check inv9_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv9_Repaired assertion is invalid\nthis/Teacher={Teacher$0, Teacher$1, Teacher$2}\nthis/Student={}\nthis/Person={Teacher$0, Teacher$1, Teacher$2}\nthis/Person.Tutors={Teacher$0->Teacher$1, Teacher$1->Teacher$2, Teacher$2->Teacher$0, Teacher$2->Teacher$2}\nthis/Person.Teaches={Teacher$1->Class$0, Teacher$1->Class$1, Teacher$1->Class$2, Teacher$2->Class$2}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1, Class$2}\nthis/Class.Groups={Class$0->Teacher$1->Group$0, Class$0->Teacher$1->Group$1, Class$0->Teacher$1->Group$2, Class$1->Teacher$0->Group$2, Class$1->Teacher$1->Group$0, Class$1->Teacher$1->Group$1, Class$1->Teacher$2->Group$2, Class$2->Teacher$0->Group$2, Class$2->Teacher$1->Group$1, Class$2->Teacher$2->Group$0}\n"
    },
    {
      "cntr_cmd": "Check inv10_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv10_Repaired assertion is invalid\nthis/Teacher={Teacher$0}\nthis/Student={Student$0, Student$1}\nthis/Person={Student$0, Teacher$0, Student$1}\nthis/Person.Tutors={Student$0->Student$0, Student$0->Teacher$0, Teacher$0->Student$1, Student$1->Student$0, Student$1->Student$1}\nthis/Person.Teaches={Student$0->Class$1, Teacher$0->Class$0, Teacher$0->Class$2, Student$1->Class$1}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1, Class$2}\nthis/Class.Groups={Class$0->Student$0->Group$0, Class$0->Student$0->Group$1, Class$0->Student$0->Group$2, Class$0->Student$1->Group$0, Class$0->Student$1->Group$1, Class$0->Student$1->Group$2, Class$1->Student$0->Group$2, Class$1->Teacher$0->Group$0, Class$1->Teacher$0->Group$1, Class$1->Student$1->Group$1, Class$2->Student$0->Group$1, Class$2->Teacher$0->Group$0, Class$2->Teacher$0->Group$2}\n"
    },
    {
      "cntr_cmd": "Check inv11_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv11_Repaired assertion is invalid\nthis/Teacher={Teacher$0, Teacher$1}\nthis/Student={Student$0}\nthis/Person={Teacher$0, Student$0, Teacher$1}\nthis/Person.Tutors={Teacher$0->Student$0, Student$0->Student$0, Student$0->Teacher$1, Teacher$1->Teacher$0}\nthis/Person.Teaches={Student$0->Class$0, Student$0->Class$1, Student$0->Class$2, Teacher$1->Class$1}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1, Class$2}\nthis/Class.Groups={Class$0->Teacher$0->Group$2, Class$0->Student$0->Group$0, Class$0->Student$0->Group$1, Class$0->Teacher$1->Group$1, Class$1->Teacher$0->Group$0, Class$1->Teacher$0->Group$2, Class$1->Student$0->Group$1, Class$1->Teacher$1->Group$1, Class$2->Teacher$0->Group$2, Class$2->Student$0->Group$0, Class$2->Student$0->Group$1}\n"
    },
    {
      "cntr_cmd": "Check inv12_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv12_Repaired assertion is invalid\nthis/Teacher={Teacher$0}\nthis/Student={Student$0}\nthis/Person={Person$0, Student$0, Teacher$0}\nthis/Person.Tutors={Person$0->Student$0, Student$0->Student$0, Student$0->Teacher$0, Teacher$0->Person$0}\nthis/Person.Teaches={Student$0->Class$0, Student$0->Class$1, Student$0->Class$2}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1, Class$2}\nthis/Class.Groups={Class$0->Person$0->Group$2, Class$0->Student$0->Group$1, Class$0->Teacher$0->Group$0, Class$0->Teacher$0->Group$2, Class$1->Person$0->Group$2, Class$1->Student$0->Group$0, Class$1->Student$0->Group$1, Class$1->Teacher$0->Group$2, Class$2->Person$0->Group$0, Class$2->Person$0->Group$2, Class$2->Student$0->Group$1, Class$2->Teacher$0->Group$0}\n"
    },
    {
      "cntr_cmd": "Check inv13_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv13_Repaired assertion is invalid\nthis/Teacher={Teacher$0}\nthis/Student={Student$0, Student$1}\nthis/Person={Student$0, Student$1, Teacher$0}\nthis/Person.Tutors={Student$0->Teacher$0, Student$1->Student$1, Student$1->Teacher$0, Teacher$0->Student$0}\nthis/Person.Teaches={Student$0->Class$1, Student$0->Class$2, Student$1->Class$0, Teacher$0->Class$1, Teacher$0->Class$2}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1, Class$2}\nthis/Class.Groups={Class$0->Student$0->Group$2, Class$0->Student$1->Group$0, Class$0->Student$1->Group$1, Class$0->Teacher$0->Group$2, Class$1->Student$1->Group$0, Class$1->Student$1->Group$1, Class$1->Student$1->Group$2, Class$2->Student$0->Group$2, Class$2->Student$1->Group$0, Class$2->Student$1->Group$1}\n"
    },
    {
      "cntr_cmd": "Check inv14_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv14_Repaired assertion is invalid\nthis/Teacher={Teacher$0}\nthis/Student={Student$0, Student$1}\nthis/Person={Student$0, Teacher$0, Student$1}\nthis/Person.Tutors={Student$0->Student$1, Teacher$0->Student$0, Teacher$0->Teacher$0, Student$1->Teacher$0}\nthis/Person.Teaches={Student$0->Class$0, Teacher$0->Class$0}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0}\nthis/Class.Groups={Class$0->Student$0->Group$0, Class$0->Student$0->Group$1, Class$0->Teacher$0->Group$1, Class$0->Teacher$0->Group$2, Class$0->Student$1->Group$0, Class$0->Student$1->Group$2}\n"
    },
    {
      "cntr_cmd": "Check inv15_Repaired",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv15_Repaired assertion is invalid\nthis/Teacher={Teacher$0}\nthis/Student={Student$0}\nthis/Person={Person$0, Student$0, Teacher$0}\nthis/Person.Tutors={Person$0->Student$0, Student$0->Person$0, Student$0->Student$0, Teacher$0->Student$0}\nthis/Person.Teaches={Person$0->Class$2, Student$0->Class$0, Student$0->Class$1, Teacher$0->Class$2}\nthis/Group={Group$0, Group$1, Group$2}\nthis/Class={Class$0, Class$1, Class$2}\nthis/Class.Groups={Class$0->Person$0->Group$2, Class$0->Student$0->Group$1, Class$0->Teacher$0->Group$0, Class$0->Teacher$0->Group$2, Class$1->Person$0->Group$1, Class$1->Student$0->Group$2, Class$1->Teacher$0->Group$0, Class$1->Teacher$0->Group$1, Class$2->Person$0->Group$1, Class$2->Student$0->Group$1, Class$2->Teacher$0->Group$0}\n"
    }
  ],
  "instances": [],
  "error": "Warning Line 1 column 253 in /Users/admin0513-27/Downloads/automated_spec_repair-main-7/the specification:\n& is irrelevant because the two subexpressions are always disjoint.\nLeft type = {this/Student}\nRight type = {this/Teacher}"
}