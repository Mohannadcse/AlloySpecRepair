abstract sig Source {} sig User extends Source { profile : set Work, visible : set Work } sig Institution extends Source {} sig Id {} sig Work { ids : some Id, source : one Source } pred inv1 { all u:User | u.visible in u.profile } pred inv2_OK { all u:User, w:Work | w in u.profile implies (u = w.source or some i:Institution | i in w.source) } assert inv2_Repaired { inv2[] iff inv2_OK[] } check inv2_Repaired expect 0