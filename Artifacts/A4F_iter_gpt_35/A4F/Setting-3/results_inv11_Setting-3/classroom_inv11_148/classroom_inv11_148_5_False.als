sig Person { Tutors: set Person, Teaches: set Class } sig Group {} sig Class { Groups: Person -> Group } sig Teacher extends Person {} sig Student extends Person {} pred inv11 { all c : Class | (some c.Groups) implies some Teacher & Teaches.c } pred inv8 { all t: Teacher | lone t.Teaches } pred inv9 { all c: Class | lone c.Teaches & Teacher } pred inv10 { all c: Class, s: Student | some s.(c.Groups) }