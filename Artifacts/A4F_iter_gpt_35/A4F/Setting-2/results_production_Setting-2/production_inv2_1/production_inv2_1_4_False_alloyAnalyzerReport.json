{
  "counterexamples": [
    {
      "cntr_cmd": "Check inv1_Repaired expect 0",
      "counterexample": "no",
      "counterexample_msg": "Counterexample not found which means that Check inv1_Repaired expect 0 is valid"
    },
    {
      "cntr_cmd": "Check inv2_Repaired expect 0",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv2_Repaired expect 0 assertion is invalid\nthis/Position={Position$0, Position$1, Position$2}\nthis/Component={Component$0, Component$1, Component$2}\nthis/Component.parts={Component$0->Component$2, Component$2->Component$0}\nthis/Component.cposition={Component$0->Position$2, Component$1->Position$2, Component$2->Position$1}\nthis/Resource={}\nthis/Product={Component$0, Component$1, Component$2}\nthis/Robot={Robot$0}\nthis/Robot.rposition={Robot$0->Position$0}\nordering/Ord={ordering/Ord$0}\nordering/Ord.First={ordering/Ord$0->Position$0}\nordering/Ord.Next={ordering/Ord$0->Position$0->Position$1, ordering/Ord$0->Position$1->Position$2}\n"
    },
    {
      "cntr_cmd": "Check inv3_Repaired expect 0",
      "counterexample": "no",
      "counterexample_msg": "Counterexample not found which means that Check inv3_Repaired expect 0 is valid"
    },
    {
      "cntr_cmd": "Check inv4_Repaired expect 0",
      "counterexample": "no",
      "counterexample_msg": "Counterexample not found which means that Check inv4_Repaired expect 0 is valid"
    }
  ],
  "instances": [
    {
      "instance_cmd": "Run repair_pred_1",
      "instances": "Yes",
      "instance_msg": "Instance found which means that the specification is consistent"
    }
  ],
  "error": ""
}