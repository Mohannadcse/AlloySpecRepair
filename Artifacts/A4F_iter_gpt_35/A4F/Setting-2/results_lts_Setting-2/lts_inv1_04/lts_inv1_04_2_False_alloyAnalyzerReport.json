{
  "counterexamples": [
    {
      "cntr_cmd": "Check inv1_Repaired expect 0",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check inv1_Repaired expect 0 assertion is invalid\nthis/State={State$0, State$1}\nthis/State.trans={State$0->Event$1->State$1, State$0->Event$2->State$0, State$1->Event$0->State$0, State$1->Event$2->State$0}\nthis/Event={Event$0, Event$1, Event$2}\nthis/Init={}\n"
    },
    {
      "cntr_cmd": "Check inv2_Repaired expect 0",
      "counterexample": "no",
      "counterexample_msg": "Counterexample not found which means that Check inv2_Repaired expect 0 is valid"
    },
    {
      "cntr_cmd": "Check inv3_Repaired expect 0",
      "counterexample": "no",
      "counterexample_msg": "Counterexample not found which means that Check inv3_Repaired expect 0 is valid"
    },
    {
      "cntr_cmd": "Check inv4_Repaired expect 0",
      "counterexample": "no",
      "counterexample_msg": "Counterexample not found which means that Check inv4_Repaired expect 0 is valid"
    },
    {
      "cntr_cmd": "Check inv5_Repaired expect 0",
      "counterexample": "no",
      "counterexample_msg": "Counterexample not found which means that Check inv5_Repaired expect 0 is valid"
    },
    {
      "cntr_cmd": "Check inv7_Repaired expect 0",
      "counterexample": "no",
      "counterexample_msg": "Counterexample not found which means that Check inv7_Repaired expect 0 is valid"
    },
    {
      "cntr_cmd": "Check repair_assert_1",
      "counterexample": "Yes",
      "counterexample_msg": "Counterexample found which means that Check repair_assert_1 assertion is invalid\nthis/State={State$0, State$1}\nthis/State.trans={State$0->Event$1->State$1, State$0->Event$2->State$0, State$1->Event$0->State$0, State$1->Event$2->State$0}\nthis/Event={Event$0, Event$1, Event$2}\nthis/Init={}\n"
    }
  ],
  "instances": [
    {
      "instance_cmd": "Run repair_pred_1",
      "instances": "Yes",
      "instance_msg": "Instance found which means that the specification is consistent"
    }
  ],
  "error": ""
}